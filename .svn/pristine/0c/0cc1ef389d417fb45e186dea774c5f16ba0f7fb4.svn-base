using DevExpress.Web;
using drKid;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace drKidAdmin.Source.admin.product
{
    public partial class A_PRODUCT_EDIT : PageBase
    {
        public string cp_ret_status = "";
        public string cp_ret_message = "";
        string flag = "";
        public string del_flag = "";

        public DataTable DELIVERY_TEMPLATE_LIST = null; // 배송안내 템플릿 
        public DataTable EXCHANGE_TEMPLATE_LIST = null; // 교환 및 반품안내 템플릿 

        //리스트에서 삭제했던 TEMPLATE의 SID
        string[] DELETE_SID_LIST_BEFORE = null;
        string delete_sid_values = null;

        DataSet DEL_TEMPLATE_DS = new DataSet();//선택 삭제 SID

        protected void Page_Load(object sender, EventArgs e)
        {
            this.basePageInit();
            if (!IsPostBack)
            {
                search_Delivery_Template();// 배송안내 템플릿 리스트 조회
                search_Exchange_Template(); // 교환 및 반품안내 템플릿 조회
            }
            else
            {
                flag = Request["flag"];

                //switch (flag)
                //{
                //    //case "TEM_DELIVERY":
                //    //    inquiry();
                //    //    break;

                  
                //}
            }
        }

        private void search_Exchange_Template() {
            bizHelper biz = new bizHelper();
            Hashtable hs = new Hashtable();
            DataSet ds = new DataSet();
            try
            {
                hs.Clear();
                hs.Add("SP_NAME", "PKG_TERMS_CONFIG.PTC_TEMPLATE_LIST");
                hs.Add("I_PERSON_NO", "DRKID");

                hs.Add("I_TEMPLATE_TYPE", "EXCHANGE");


                hs.Add("I_OFFSET", 0);
                hs.Add("I_MATCHES", 200);

                hs.Add("I_LANGUAGE_CODE", "KOR");
                hs.Add("I_PROGRESS_GUID", BizUtil.getGUID());
                hs.Add("I_REQUEST_USER_ID", baseUser.userId);
                hs.Add("I_REQUEST_IP_ADDRESS", baseUser.userIpAddress);
                hs.Add("I_REQUEST_PROGRAM_ID", "A_PRODUCT_EDIT");

                ds = biz.operationSP(hs);

                cp_ret_status = ds.Tables["O_ERROR_FLAG"].Rows[0]["O_ERROR_FLAG"].ToString();
                cp_ret_message = ds.Tables["O_RETURN_MESSAGE"].Rows[0]["O_RETURN_MESSAGE"].ToString();

                if (cp_ret_status == "N")
                {
                    EXCHANGE_TEMPLATE_LIST = ds.Tables["O_RESULT_CURSOR"];
                }
            }
            catch (Exception ex)
            {
                cp_ret_status = "Y";
                cp_ret_message = ex.Message;
            }
            finally
            {
                if (biz != null)
                {
                    biz.Dispose();
                    biz = null;
                }
            }
        }

        private void search_Delivery_Template() 
        {

            
            bizHelper biz = new bizHelper();
            Hashtable hs = new Hashtable();
            DataSet ds = new DataSet();
            try
            {
                hs.Clear();
                hs.Add("SP_NAME", "PKG_TERMS_CONFIG.PTC_TEMPLATE_LIST");
                hs.Add("I_PERSON_NO", "DRKID");

                hs.Add("I_TEMPLATE_TYPE", "DELIVERY");


                hs.Add("I_OFFSET", 0);
                hs.Add("I_MATCHES", 200);

                hs.Add("I_LANGUAGE_CODE", "KOR");
                hs.Add("I_PROGRESS_GUID", BizUtil.getGUID());
                hs.Add("I_REQUEST_USER_ID", baseUser.userId);
                hs.Add("I_REQUEST_IP_ADDRESS", baseUser.userIpAddress);
                hs.Add("I_REQUEST_PROGRAM_ID", "A_PRODUCT_EDIT");

                ds = biz.operationSP(hs);

                cp_ret_status = ds.Tables["O_ERROR_FLAG"].Rows[0]["O_ERROR_FLAG"].ToString();
                cp_ret_message = ds.Tables["O_RETURN_MESSAGE"].Rows[0]["O_RETURN_MESSAGE"].ToString();

                if (cp_ret_status == "N")
                {
                    DELIVERY_TEMPLATE_LIST = ds.Tables["O_RESULT_CURSOR"];
                }
            }
            catch (Exception ex)
            {
                cp_ret_status = "Y";
                cp_ret_message = ex.Message;
            }
            finally
            {
                if (biz != null)
                {
                    biz.Dispose();
                    biz = null;
                }
            }
        }

        protected void UploadControl_FilesUploadComplete1(object sender, FileUploadCompleteEventArgs e)
        {

            //자세한 내용은 UploadUtil에 적어두었음. 응용하시오 KSM
            var JsonData = UploadUtil.UploadForImage(e);
            string returnData = JsonConvert.SerializeObject(JsonData);
            e.CallbackData = returnData;

        }
        protected void UploadControl_FilesUploadComplete2(object sender, FileUploadCompleteEventArgs e)
        {

            //자세한 내용은 UploadUtil에 적어두었음. 응용하시오 KSM
            var JsonData = UploadUtil.UploadForImage(e);
            string returnData = JsonConvert.SerializeObject(JsonData);
            e.CallbackData = returnData;

        }

        protected void UploadControl_FilesUploadComplete3(object sender, FileUploadCompleteEventArgs e)
        {

            //자세한 내용은 UploadUtil에 적어두었음. 응용하시오 KSM
            var JsonData = UploadUtil.UploadForImage(e);
            string returnData = JsonConvert.SerializeObject(JsonData);
            e.CallbackData = returnData;

        }
    }
}